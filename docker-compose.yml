networks: 
  app-network:
    driver: bridge

services:
  db:
    container_name: challenge_postgres_db
    image: postgres:17
    ports:
      - '5555:5555'
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: db
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - app-network
    
    # Database health check
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U postgres']
      interval: 5s
      timeout: 10s
      retries: 5

  backend:
    container_name: challenge_backend
    platform: ${DOCKER_PLATFORM}
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - '5554:5554'
    volumes:
      - ./backend:/app
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
  
  #frontend:
  #  container_name: challenge_frontend
  #  platform: ${DOCKER_PLATFORM}
  #  build:
  #    context: ./frontend
  #    dockerfile: Dockerfile
  #  ports:
  #    - '5553:5553'
  #  volumes:
  #    - ./frontend:/app
  #  depends_on:
  #    backend
  #  networks:
  #    - app-network

volumes:
  postgres-data: